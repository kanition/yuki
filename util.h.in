#ifndef YUKI_UTIL
#define YUKI_UTIL
#include <iostream>
#cmakedefine LINUX_OK_H
#cmakedefine WIN_OK_H

#ifdef WIN_OK_H
#include <wchar.h>
#include <windows.h>
int set_color_cmd(DWORD &, bool);
#endif
void clean_cin();
std::string add_zero(const std::string &, std::string::size_type);
int check_dir(const std::string &);
int make_direct(const std::string &);
std::string remove_chars(const std::string &);
std::string join_path(std::initializer_list<std::string>);
// 不定参数量模板重载使之也适合C字符串
template <typename... Ts>
std::string join_path(Ts &&... paths)
{
    static_assert(((std::is_same<typename std::decay<Ts>::type, std::string>::value ||
                    std::is_same<typename std::decay<Ts>::type, const char *>::value) ||
                   ...),
                  "T must be a basic_string");
    return join_path({paths...});
}
std::string basename(const std::string &);
bool check_str_id(const std::string &);

#endif